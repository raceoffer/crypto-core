syntax = 'proto3';

import "paillierkeys.proto";
import "pedersenscheme.proto";
import "schnorrproof.proto";

message EcdsaInitialCommitment {
  int32 curve = 1;
  bytes pedersen_parameters = 2;
  bytes initial_commitment = 3;
}

message EcdsaInitialDecommitment {
  int32 curve = 1;
  bytes public_point = 2;
  bytes chiphertext = 3;
  bytes initial_decommitment = 4;
  PaillierPublicKey paillier_publicKey = 5;
}

message EcdsaResponseCommitment {
  int32 curve = 1;
  bytes response_commitment = 2;
}

message EcdsaResponseDecommitment {
  int32 curve = 1;
  bytes response_decommitment = 2;
  bytes response = 3;
}

message EcdsaSyncData {
  int32 curve = 1;
  bytes public_point = 2;
}

message DistributedEcdsaSyncSession {
  int32 curve = 1;
  bytes local_private_key = 2;
  bytes alpha = 3;
  bytes remote_public_point = 4;
  bytes remote_pedersen_parameters = 5;
  bytes local_chiphertext = 6;
  bytes local_initial_decommitment = 7;
  bytes remote_reveal_commitment = 8;
  bytes local_response_decommitment = 9;
  PaillierPublicKey localPaillier_public_key = 10;
  PaillierSecretKey localPaillier_secret_key = 11;
  PedersenScheme local_pedersen_scheme = 12;
}

message EcdsaInitialData {
  int32 curve = 1;
  bytes pedersen_parameters = 2;
  bytes public_point = 3;
  SchnorrProof schnorr_proof = 4;
}

message EcdsaChallengeCommitment {
  int32 curve = 1;
  bytes challenge = 2;
  bytes reveal_commitment = 3;
}

message EcdsaChallengeDecommitment {
  int32 curve = 1;
  bytes reveal_decommitment = 2;
  bytes a = 3;
  bytes b = 4;
}

message EcdsaShardSyncData {
  int32 curve = 1;
  bytes public_point = 2;
  bytes ciphertext = 3;
  PaillierPublicKey paillier_public_key = 4;
}

message DistributedEcdsaSyncSessionShard {
  int32 curve = 1;
  bytes local_private_key = 2;
  bytes a = 3;
  bytes b = 4;
  bytes remote_public_point = 5;
  bytes remote_ciphertext = 6;
  bytes remote_pedersen_parameters = 7;
  bytes remote_initial_commitment = 8;
  bytes local_reveal_decommitment = 9;
  bytes remote_response_commitment = 10;
  PedersenScheme local_pedersen_scheme = 11;
  PaillierPublicKey remote_paillier_public_key = 12;
}

message EcdsaInitialCommitmentMessage {
  PaillierPublicKey paillierPublicKey = 1;
  bytes publicPoint = 2;
  bytes chiphertext = 3;
}

message EcdsaChallengeCommitmentMessage {
  bytes a = 1;
  bytes b = 2;
}